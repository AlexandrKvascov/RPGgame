{"ast":null,"code":"// src/GamePage.js\nimport React,{useState,useEffect}from'react';import ButtonMove from'./ButtonMove';import{useNavigate}from'react-router-dom';import{initPlayer}from'./api';import KnightImage from\"./image/KnightState.gif\";import'./styles/GamePage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GamePage=()=>{const[playerUpdate,setPlayerUpdate]=useState();const[location,setLocation]=useState(null);const navigate=useNavigate();const npc=JSON.parse(localStorage.getItem('npc'));const[isInCombat,setIsInCombat]=useState(false);useEffect(()=>{async function loadPlayers(){const playerId=JSON.parse(localStorage.getItem('playerId'));const playerUpdate=await initPlayer(playerId);setPlayerUpdate(playerUpdate);localStorage.setItem('player',JSON.stringify(playerUpdate));}loadPlayers();},[]);useEffect(()=>{const direction=JSON.parse(localStorage.getItem('direction'));if(direction){setLocation(direction);}},[]);const handleAcceptCombat=()=>{setIsInCombat(true);const status={enemyHp:npc[0].Health,enemyDamge:npc[0].Strength,Hp:playerUpdate.Health,damage:playerUpdate.Strenght,EnemyId:npc[0].Id_npc,MeId:playerUpdate.Id,exp:playerUpdate.Exp};navigate('/battle',{state:status});};const handleDeclineCombat=()=>{setLocation(null);setIsInCombat(false);};return/*#__PURE__*/_jsx(\"body\",{className:\"GamePage\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"StatusContainer\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"Personh2\",children:\"\\u041F\\u0430\\u0440\\u0430\\u043C\\u0435\\u0442\\u0440\\u044B \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u0436\\u0430:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"StatusPlayer\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u0418\\u043C\\u044F: \",playerUpdate===null||playerUpdate===void 0?void 0:playerUpdate.Name]}),/*#__PURE__*/_jsxs(\"li\",{className:\"Health\",children:[\"\\u0417\\u0434\\u043E\\u0440\\u043E\\u0432\\u044C\\u0435: \",playerUpdate===null||playerUpdate===void 0?void 0:playerUpdate.Health]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u0421\\u0438\\u043B\\u0430: \",playerUpdate===null||playerUpdate===void 0?void 0:playerUpdate.Strenght]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u0423\\u0440\\u043E\\u0432\\u0435\\u043D\\u044C: \",playerUpdate===null||playerUpdate===void 0?void 0:playerUpdate.Lvl]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"HP: \",playerUpdate===null||playerUpdate===void 0?void 0:playerUpdate.Hp]}),/*#__PURE__*/_jsxs(\"li\",{className:\"Exp\",children:[\"Exp: \",playerUpdate===null||playerUpdate===void 0?void 0:playerUpdate.Exp,\"/100\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:KnightImage})}),location?/*#__PURE__*/_jsxs(\"div\",{className:\"NpcInfo\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u0412\\u044B \\u043D\\u0430\\u0445\\u043E\\u0434\\u0438\\u0442\\u0435\\u0441\\u044C \\u0432 \",location[0]]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u0421\\u043E\\u043F\\u0435\\u0440\\u043D\\u0438\\u043A: \",npc[0].Type]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u0417\\u0434\\u043E\\u0440\\u043E\\u0432\\u044C\\u0435: \",npc[0].Health]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u0421\\u0438\\u043B\\u0430: \",npc[0].Strength]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u0423\\u0440\\u043E\\u0432\\u0435\\u043D\\u044C: \",npc[0].Lvl]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u041E\\u0440\\u0435\\u0430\\u043E\\u043B \\u043E\\u0431\\u0438\\u0442\\u0430\\u043D\\u0438\\u044F : \",npc[0].Location]}),isInCombat?/*#__PURE__*/_jsx(\"p\",{children:\"\\u0412\\u044B \\u0432 \\u0431\\u043E\\u044E!\"}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAcceptCombat,children:\"\\u041F\\u0440\\u0438\\u043D\\u044F\\u0442\\u044C \\u0431\\u043E\\u0439\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDeclineCombat,children:\"\\u041E\\u0442\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\\u0441\\u044F \\u043E\\u0442 \\u0431\\u043E\\u044F\"})]})]}):/*#__PURE__*/_jsx(ButtonMove,{setLocation:setLocation})]})});};export default GamePage;","map":{"version":3,"names":["React","useState","useEffect","ButtonMove","useNavigate","initPlayer","KnightImage","jsx","_jsx","jsxs","_jsxs","GamePage","playerUpdate","setPlayerUpdate","location","setLocation","navigate","npc","JSON","parse","localStorage","getItem","isInCombat","setIsInCombat","loadPlayers","playerId","setItem","stringify","direction","handleAcceptCombat","status","enemyHp","Health","enemyDamge","Strength","Hp","damage","Strenght","EnemyId","Id_npc","MeId","Id","exp","Exp","state","handleDeclineCombat","className","children","Name","Lvl","src","Type","Location","onClick"],"sources":["C:/Projects/RPGgame/RPGgame/FrontGame/my-game/src/GamePage.js"],"sourcesContent":["// src/GamePage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport ButtonMove from './ButtonMove';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { initPlayer } from './api';\r\nimport KnightImage from \"./image/KnightState.gif\"\r\nimport './styles/GamePage.css'\r\n\r\nconst GamePage = () => {\r\n\r\n \r\n\r\n  const [playerUpdate, setPlayerUpdate] = useState()\r\n  const [location, setLocation] = useState(null);\r\n  const navigate = useNavigate();\r\n  const npc = JSON.parse(localStorage.getItem('npc'));\r\n\r\n  const [isInCombat, setIsInCombat] = useState(false);\r\n  useEffect(() =>{\r\n    async function loadPlayers() {\r\n    const playerId = JSON.parse(localStorage.getItem('playerId'))\r\n    const playerUpdate = await initPlayer(playerId);\r\n    setPlayerUpdate(playerUpdate);\r\n    localStorage.setItem('player', JSON.stringify(playerUpdate));\r\n  }\r\n    loadPlayers();\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    const direction = JSON.parse(localStorage.getItem('direction'));\r\n\r\n    if (direction) {\r\n      setLocation(direction);\r\n    }\r\n  }, []);\r\n\r\n  const handleAcceptCombat = () => {\r\n    setIsInCombat(true);\r\n    const status = {\r\n        enemyHp: npc[0].Health,\r\n        enemyDamge: npc[0].Strength,\r\n        Hp:playerUpdate.Health,\r\n        damage:playerUpdate.Strenght,\r\n        EnemyId: npc[0].Id_npc,\r\n        MeId: playerUpdate.Id,\r\n        exp: playerUpdate.Exp\r\n    }\r\n  \r\n   \r\n    navigate('/battle', {state: status})\r\n  };\r\n\r\n  const handleDeclineCombat = () => {\r\n    setLocation(null);\r\n    setIsInCombat(false);\r\n  };\r\n\r\n  return (\r\n    <body className='GamePage'>\r\n    <div>\r\n      <div className='StatusContainer'>\r\n\r\n      <h3 className='Personh2'>Параметры персонажа:</h3>\r\n      <ul className='StatusPlayer'>\r\n        <li>Имя: {playerUpdate?.Name}</li>\r\n        <li className='Health'>Здоровье: {playerUpdate?.Health}</li>\r\n        <li>Сила: {playerUpdate?.Strenght}</li>\r\n        <li>Уровень: {playerUpdate?.Lvl}</li>\r\n        <li>HP: {playerUpdate?.Hp}</li>\r\n        <li className='Exp'>Exp: {playerUpdate?.Exp}/100</li>\r\n      </ul>\r\n      </div>\r\n      <div>\r\n        <img src={KnightImage}/> \r\n      </div>\r\n      {location ? (\r\n        <div className='NpcInfo'>\r\n          <p>Вы находитесь в {location[0]}</p>\r\n          <li>Соперник: {npc[0].Type}</li>\r\n          <li>Здоровье: {npc[0].Health}</li>\r\n          <li>Сила: {npc[0].Strength}</li>\r\n          <li>Уровень: {npc[0].Lvl}</li>\r\n          <li>Ореаол обитания : {npc[0].Location}</li>\r\n          {isInCombat ? (\r\n            <p>Вы в бою!</p>\r\n          ) : (\r\n            <div>\r\n              <button onClick={handleAcceptCombat}>Принять бой</button>\r\n              <button onClick={handleDeclineCombat}>Отказаться от боя</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <ButtonMove setLocation={setLocation} />\r\n      )}\r\n    </div>\r\n    </body>\r\n  );\r\n};\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}