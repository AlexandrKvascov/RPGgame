{"ast":null,"code":"// src/api.js\nconst apiUrl = 'http://localhost:8080/newgame';\nconst getPlayer = async name => {\n  const url = new URL(apiUrl);\n  url.searchParams.set('name', name);\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const player = await response.json();\n  console.log(player);\n  return player;\n};\nconst setMove = async move => {\n  const url = new URL(\"http://localhost:8080/move\");\n  url.searchParams.set('direction', move);\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const result = await response.json();\n  console.log(result);\n  return result;\n};\nconst setNpc = async () => {\n  const url = new URL(\"http://localhost:8080/battle\");\n  const response = await fetch(url, {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const result = await response.json();\n  console.log(result);\n  return result;\n};\n\n// api.js\nconst setStartBattle = async status => {\n  const url = new URL(\"http://localhost:8080/getbattle\");\n  const data = {\n    coin: status\n  }; // создаем объект с данными\n\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data) // преобразуем объект в строку JSON и передаем в теле запроса\n  });\n  const result = response.json();\n  console.log(11);\n  console.log(result);\n  return result;\n};\nconst SetExp = async status => {\n  const url = new URL(\"http://localhost:8080/newLvl\");\n  const data = {\n    id: status\n  };\n  console.log(data);\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data) // преобразуем объект в строку JSON и передаем в теле запроса\n  });\n  const result = response.json();\n  console.log(result);\n  return result;\n};\n_c = SetExp;\nexport { getPlayer, setMove, setNpc, setStartBattle, SetExp };\nvar _c;\n$RefreshReg$(_c, \"SetExp\");","map":{"version":3,"names":["apiUrl","getPlayer","name","url","URL","searchParams","set","response","fetch","method","mode","headers","player","json","console","log","setMove","move","result","setNpc","setStartBattle","status","data","coin","body","JSON","stringify","SetExp","id","_c","$RefreshReg$"],"sources":["C:/Projects/RPGgame/RPGgame/FrontGame/my-game/src/api.js"],"sourcesContent":["// src/api.js\r\nconst apiUrl = 'http://localhost:8080/newgame';\r\n\r\nconst getPlayer = async (name) => {\r\n    const url = new URL(apiUrl);\r\n    url.searchParams.set('name', name);\r\n  \r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const player = await response.json();\r\n    console.log(player)\r\n    return player;\r\n  };\r\nconst setMove = async(move)=>{\r\n    const url = new URL(\"http://localhost:8080/move\")\r\n\r\n    url.searchParams.set('direction', move);\r\n    const response = await fetch(url,{\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      const result = await response.json();\r\n      console.log(result)\r\n      return result;\r\n}\r\n\r\n\r\nconst setNpc = async()=>{\r\n    const url = new URL(\"http://localhost:8080/battle\")\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    const result = await response.json()\r\n    console.log(result)\r\n    return result\r\n}\r\n\r\n// api.js\r\nconst setStartBattle = async (status) => {\r\n    const url = new URL(\"http://localhost:8080/getbattle\")\r\n    const data = { coin: status }; // создаем объект с данными\r\n    \r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data), // преобразуем объект в строку JSON и передаем в теле запроса\r\n    })\r\n    \r\n    const result =  response.json();\r\n    console.log(11)\r\n    console.log(result)\r\n    return result;\r\n\r\n  };\r\n\r\nconst SetExp = async (status) =>{\r\n  const url = new URL(\"http://localhost:8080/newLvl\")\r\n  const data = { id: status}\r\n  console.log(data)\r\n  const response  = await fetch(url, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data), // преобразуем объект в строку JSON и передаем в теле запроса\r\n})\r\n\r\nconst result = response.json()\r\nconsole.log(result)\r\nreturn result\r\n\r\n}\r\n\r\nexport  { getPlayer, setMove, setNpc, setStartBattle, SetExp};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}